##DataSource Config
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springboot?characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=fengyiluo
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

##Log Config
logging.config=classpath:logback-spring.xml

## SpringData JPA Config
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
#server.port=9996


#server.port=9991
#server.tomcat.uri-encoding=UTF-8


#使用Eureka实现服务发现组件
#spring.application.name=springcloud-cureka-server
#server.port=9999
#eureka.instance.hostname=127.0.0.1
#定义注册中心的地址
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#不向注册中心注册自己
#eureka.client.register-with-eureka=false
#注册中心的职责就是去维护服务实例，不需要去检索服务
#eureka.client.fetch-registry=false
#eureka.instance.prefer-ip-address=true



#####Eureka Client Config#######
#设置服务名称
#spring.application.name=springcloud-provider-user-service
#eureka 单实例配置
#eureka.client.service-url.defaultZone=http://127.0.0.1:9999/eureka
#指定服务注册中心的地址 ###高可用改造后可以加上多个注册中心的地址
#eureka.client.service-url.defaultZone=http://127.0.0.1:9998/eureka/,http://127.0.0.1:9997/eureka/
#eureka.instance.prefer-ip-address=true


##eureka server 启用安全验证
security.user.name=gmq
security.user.password=666666
security.basic.enabled=true



#使用Ribbon实现客户端负载均衡
spring.application.name=springcloud-consumer-h5-ribbon-hystrix
server.port=9994
eureka.client.service-url.defaultZone=http://gmq:666666@127.0.0.1:9998/eureka/,http://gmq:666666@127.0.0.1:9997/eureka/
#eureka.instance.prefer-ip-address=true
##修改服务负载均衡规则为随机
springcloud-provier-user-service.ribbon.NFLoadBalanceRuleClassName=com.netflix.loadbalancer.RandomRule